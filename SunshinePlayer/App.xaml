<Application x:Class="SunshinePlayer.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:SunshinePlayer"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             mc:Ignorable="d"
             StartupUri="MainWindow.xaml">
    <Application.Resources>
        <!-- 窗口圆角 -->
        <CornerRadius x:Key="winCorner">
            <CornerRadius.BottomLeft>5</CornerRadius.BottomLeft>
            <CornerRadius.BottomRight>5</CornerRadius.BottomRight>
            <CornerRadius.TopLeft>5</CornerRadius.TopLeft>
            <CornerRadius.TopRight>5</CornerRadius.TopRight>
        </CornerRadius>
        <!-- 窗口边框样式 -->
        <Style x:Key="winBorderStyle" TargetType="{x:Type Border}">
            <Setter Property="Background" Value="#00000000" />
        </Style>
        <!-- 标题栏圆角 -->
        <CornerRadius x:Key="winTitleCorner">
            <CornerRadius.BottomLeft>0</CornerRadius.BottomLeft>
            <CornerRadius.BottomRight>0</CornerRadius.BottomRight>
            <CornerRadius.TopLeft>5</CornerRadius.TopLeft>
            <CornerRadius.TopRight>5</CornerRadius.TopRight>
        </CornerRadius>
        <!-- 窗口标题样式 -->
        <Style x:Key="winTitleStyle" TargetType="{x:Type Border}">
            <Setter Property="Cursor" Value="Hand" />
            <Setter Property="Width" Value="Auto" />
            <Setter Property="Height" Value="28" />
            <Setter Property="DockPanel.Dock" Value="Top" />
            <Setter Property="Cursor" Value="Hand" />
            <Setter Property="Padding" Value="10,5,10,5" />
        </Style>
        <!-- 最小化按钮样式 -->
        <Style x:Key="btnMinimizeStyle" TargetType="{x:Type Button}">
            <Setter Property="Margin" Value="2,0,2,0" />
            <Setter Property="Cursor" Value="Hand" />
            <Setter Property="Opacity" Value="0.75" />
            <Setter Property="ToolTip" Value="最小化"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Grid>
                            <Rectangle Width="18" Height="16" Fill="White" Opacity=".1" RadiusX="4" RadiusY="4" StrokeThickness="2" />
                            <Rectangle Width="18" Height="16" StrokeThickness="2" RadiusX="4" RadiusY="4" Stroke="White" />
                            <!-- 按钮内容 -->
                            <Grid>
                                <Canvas HorizontalAlignment="Left" VerticalAlignment="Top" Margin="5">
                                    <Line StrokeThickness="2" Stroke="White" X1="0" Y1="4" X2="8" Y2="4" />
                                </Canvas>
                            </Grid>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver"  Value="True">
                                <Setter Property="Opacity" Value="1" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!-- 关闭按钮样式 -->
        <Style x:Key="btnCloseStyle" TargetType="{x:Type Button}">
            <Setter Property="Margin" Value="2,0,2,0" />
            <Setter Property="Cursor" Value="Hand" />
            <Setter Property="Opacity" Value="0.75" />
            <Setter Property="ToolTip" Value="关闭"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Grid>
                            <Ellipse Width="18" Height="18" Opacity=".1" StrokeThickness="2" Fill="#4f535d" Stroke="White" />
                            <Ellipse x:Name="borderBtn" Width="18" Height="18" StrokeThickness="2" Stroke="White" />
                            <!-- 按钮内容 -->
                            <Grid>
                                <Canvas HorizontalAlignment="Left" VerticalAlignment="Top" Margin="5">
                                    <Line StrokeThickness="2" Stroke="White" X1="0" Y1="0" X2="8" Y2="8" />
                                    <Line StrokeThickness="2" Stroke="White" X1="0" Y1="8" X2="8" Y2="0" />
                                </Canvas>
                            </Grid>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver"  Value="True">
                                <Setter Property="Opacity" Value="1" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!-- 按钮动画效果 -->
        <Style x:Key="btnAnimation" TargetType="{x:Type Canvas}">
            <Style.Resources>
                <!-- 鼠标进入 -->
                <Storyboard x:Key="mouseIn">
                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Effect.BlurRadius">
                        <LinearDoubleKeyFrame KeyTime="0" Value="20"/>
                    </DoubleAnimationUsingKeyFrames>
                </Storyboard>
                <!-- 鼠标离开 -->
                <Storyboard x:Key="mouseOut">
                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Effect.BlurRadius">
                        <LinearDoubleKeyFrame KeyTime="0" Value="0"/>
                    </DoubleAnimationUsingKeyFrames>
                </Storyboard>
            </Style.Resources>
            <Style.Triggers>
                <EventTrigger RoutedEvent="UIElement.MouseEnter">
                    <BeginStoryboard x:Name="mouseIn_BeginStoryboard" Storyboard="{StaticResource mouseIn}"/>
                </EventTrigger>
                <EventTrigger RoutedEvent="UIElement.MouseLeave">
                    <BeginStoryboard x:Name="mouseOut_BeginStoryboard" Storyboard="{StaticResource mouseOut}"/>
                </EventTrigger>
            </Style.Triggers>
        </Style>

        <!--以下样式来自Simple Styles-->
        <!-- “已禁用的画笔”用于每个控件的 Disabled 外观 -->
        <SolidColorBrush x:Key="DisabledBackgroundBrush" Color="#EEE"/>
        <SolidColorBrush x:Key="DisabledBorderBrush" Color="#AAA"/>
        <!-- 用于 Checkmark、Radio button、TreeViewItem、Expander ToggleButton 字形 -->
        <SolidColorBrush x:Key="GlyphBrush" Color="#444"/>
        <!-- MouseOverBrush 用于 Button、Radio Button、CheckBox 中的 MouseOver -->
        <LinearGradientBrush x:Key="MouseOverBrush" EndPoint="0,1" StartPoint="0,0">
            <GradientStop Color="#FFF" Offset="0.0"/>
            <GradientStop Color="#AAA" Offset="1.0"/>
        </LinearGradientBrush>
        <!-- NormalBrush 用作 SimpleButton 和 SimpleRepeatButton 的背景 -->
        <LinearGradientBrush x:Key="NormalBorderBrush" EndPoint="0,1" StartPoint="0,0">
            <GradientStop Color="#CCC" Offset="0.0"/>
            <GradientStop Color="#444" Offset="1.0"/>
        </LinearGradientBrush>
        <LinearGradientBrush x:Key="NormalBrush" EndPoint="0,1" StartPoint="0,0">
            <GradientStop Color="#EEE" Offset="0.0"/>
            <GradientStop Color="#CCC" Offset="1.0"/>
        </LinearGradientBrush>
        <!-- Simple ScrollRepeatButton Style - 此 RepeatButton 在 Scrollbar 中的 Thumb 的上方和下方使用。将其设置为透明可使其不覆盖滚动栏 -->
        <Style x:Key="SimpleScrollRepeatButtonStyle" d:IsControlPart="True" TargetType="{x:Type RepeatButton}">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="IsTabStop" Value="false"/>
            <Setter Property="Focusable" Value="false"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                        <Grid>
                            <Rectangle Fill="{TemplateBinding Background}" Stroke="{TemplateBinding BorderBrush}" StrokeThickness="{TemplateBinding BorderThickness}"/>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!--Simple Simple SliderThumb - Thumb 是 Slider 的可拖动部分-->
        <Style x:Key="SimpleSliderThumb" d:IsControlPart="True" TargetType="{x:Type Thumb}">
            <Setter Property="SnapsToDevicePixels" Value="true"/>
            <Setter Property="Height" Value="14"/>
            <Setter Property="Width" Value="14"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Thumb}">
                        <ControlTemplate.Resources>
                            <Storyboard x:Key="mouseIn">
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Effect).(DropShadowEffect.BlurRadius)" Storyboard.TargetName="Ellipse">
                                    <SplineDoubleKeyFrame KeyTime="0:0:0.1" Value="20"/>
                                </DoubleAnimationUsingKeyFrames>
                            </Storyboard>
                            <Storyboard x:Key="mouseOut">
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Effect).(DropShadowEffect.BlurRadius)" Storyboard.TargetName="Ellipse">
                                    <SplineDoubleKeyFrame KeyTime="0" Value="20"/>
                                    <SplineDoubleKeyFrame KeyTime="0:0:0.5" Value="0"/>
                                </DoubleAnimationUsingKeyFrames>
                            </Storyboard>
                        </ControlTemplate.Resources>
                        <Grid>
                            <Ellipse x:Name="Ellipse" Fill="{DynamicResource NormalBrush}" Stroke="{DynamicResource NormalBorderBrush}" StrokeThickness="1">
                                <Ellipse.Effect>
                                    <DropShadowEffect ShadowDepth="0" Color="White" Opacity="1" BlurRadius="0"/>
                                </Ellipse.Effect>
                            </Ellipse>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Trigger.ExitActions>
                                    <BeginStoryboard x:Name="mouseOut_BeginStoryboard" Storyboard="{StaticResource mouseOut}"/>
                                </Trigger.ExitActions>
                                <Trigger.EnterActions>
                                    <BeginStoryboard Storyboard="{StaticResource mouseIn}"/>
                                </Trigger.EnterActions>
                                <Setter Property="Fill" Value="{DynamicResource MouseOverBrush}" TargetName="Ellipse"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Fill" Value="{DynamicResource DisabledBackgroundBrush}" TargetName="Ellipse"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!--Simple Simple Slider 与 ScrollBar 类似，此模板使用 Track 对可拖动的 Thumb 进行布局，该 Thumb 包含向上和向下的 repeat button 它对向上翻页和向下翻页 repeat button 使用 Simple SliderThumb 和 SimpleScrollRepeatButtonStyle -->
        <Style x:Key="SimpleSlider" TargetType="{x:Type Slider}">
            <Setter Property="Background" Value="#FF515151"/>
            <Setter Property="BorderBrush" Value="Black"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Slider}">
                        <Grid x:Name="GridRoot">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto" MinHeight="{TemplateBinding MinHeight}"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>

                            <!-- TickBar 显示了 Slider 的刻度 -->
                            <TickBar Visibility="Collapsed" x:Name="TopTick" Height="4" SnapsToDevicePixels="True" Placement="Top" Fill="{DynamicResource GlyphBrush}"/>
                            <Border Grid.Row="1" Margin="0" x:Name="Border" Height="4" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="2"/>

                            <!-- Track 可对 repeat button 和 thumb 进行布局 -->
                            <Track Grid.Row="1" x:Name="PART_Track">
                                <Track.Thumb>
                                    <Thumb Style="{DynamicResource SimpleSliderThumb}"/>
                                </Track.Thumb>
                                <Track.IncreaseRepeatButton>
                                    <RepeatButton Style="{DynamicResource SimpleScrollRepeatButtonStyle}" Command="Slider.IncreaseLarge"/>
                                </Track.IncreaseRepeatButton>
                                <Track.DecreaseRepeatButton>
                                    <RepeatButton Style="{DynamicResource SimpleScrollRepeatButtonStyle}" Command="Slider.DecreaseLarge"/>
                                </Track.DecreaseRepeatButton>
                            </Track>

                            <TickBar Visibility="Collapsed" Grid.Row="2" x:Name="BottomTick" Height="4" SnapsToDevicePixels="True" Placement="Bottom" Fill="{DynamicResource GlyphBrush}"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="TickPlacement" Value="TopLeft">
                                <Setter Property="Visibility" Value="Visible" TargetName="TopTick"/>
                            </Trigger>
                            <Trigger Property="TickPlacement" Value="BottomRight">
                                <Setter Property="Visibility" Value="Visible" TargetName="BottomTick"/>
                            </Trigger>
                            <Trigger Property="TickPlacement" Value="Both">
                                <Setter Property="Visibility" Value="Visible" TargetName="TopTick"/>
                                <Setter Property="Visibility" Value="Visible" TargetName="BottomTick"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" Value="{DynamicResource DisabledBackgroundBrush}" TargetName="Border"/>
                                <Setter Property="BorderBrush" Value="{DynamicResource DisabledBorderBrush}" TargetName="Border"/>
                            </Trigger>

                            <!-- 通过旋转可从默认的 Horizontal 创建 Vertical Slider -->
                            <Trigger Property="Orientation" Value="Vertical">
                                <Setter Property="LayoutTransform" TargetName="GridRoot">
                                    <Setter.Value>
                                        <RotateTransform Angle="-90"/>
                                    </Setter.Value>
                                </Setter>
                                <!-- Track 会根据方向自行旋转，因此需要强制其返回 -->
                                <Setter TargetName="PART_Track" Property="Orientation" Value="Horizontal"/>
                            </Trigger>

                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="Orientation" Value="Vertical"/>
            <Setter Property="Maximum" Value="10"/>
            <Setter Property="SmallChange" Value="0.1"/>
            <Setter Property="Value" Value="0"/>
            <Setter Property="Focusable" Value="False"/>
            <Setter Property="IsTabStop" Value="False"/>
            <Setter Property="TickPlacement" Value="Both"/>
        </Style>

        <!--滚动条按行滚动按钮-->
        <Style x:Key="ScrollBarLineButton" TargetType="{x:Type RepeatButton}">
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <Setter Property="OverridesDefaultStyle" Value="True"/>
            <Setter Property="Focusable" Value="False"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                        <Border Name="Border" Background="#666">
                            <Path HorizontalAlignment="Center" VerticalAlignment="Center" Fill="#CCC" Data="{Binding Path=Content, RelativeSource={RelativeSource TemplatedParent}}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter TargetName="Border" Property="Background" Value="#888"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Foreground" Value="#000"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!--滚动条按页滚动按钮-->
        <Style x:Key="ScrollBarPageButton" TargetType="{x:Type RepeatButton}">
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <Setter Property="OverridesDefaultStyle" Value="True"/>
            <Setter Property="IsTabStop" Value="False"/>
            <Setter Property="Focusable" Value="False"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                        <Border Background="Transparent"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!--滚动条滑块-->
        <Style x:Key="ScrollBarThumb" TargetType="{x:Type Thumb}">
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <Setter Property="OverridesDefaultStyle" Value="True"/>
            <Setter Property="IsTabStop" Value="False"/>
            <Setter Property="Focusable" Value="False"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Thumb}">
                        <Border Background="{TemplateBinding Background}" />
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!--竖直滚动条样式-->
        <ControlTemplate x:Key="VerticalScrollBar" TargetType="{x:Type ScrollBar}">
            <Grid >
                <Grid.RowDefinitions>
                    <RowDefinition MaxHeight="12"/>
                    <RowDefinition Height="*"/>
                    <RowDefinition MaxHeight="12"/>
                </Grid.RowDefinitions>
                <!--背景-->
                <Border Grid.RowSpan="3" CornerRadius="2" Background="#CCC"/>
                <!--上边按钮-->
                <RepeatButton Grid.Row="0" Style="{StaticResource ScrollBarLineButton}" Height="12" Command="ScrollBar.LineUpCommand" Content="M0 4H8L4 0Z"/>
                <!--滚动条-->
                <Track Name="PART_Track" Grid.Row="1" IsDirectionReversed="True">
                    <!--滚动条向上-->
                    <Track.DecreaseRepeatButton>
                        <RepeatButton Style="{StaticResource ScrollBarPageButton}" Command="ScrollBar.PageUpCommand"/>
                    </Track.DecreaseRepeatButton>
                    <!--滚动条-->
                    <Track.Thumb>
                        <Thumb Style="{StaticResource ScrollBarThumb}" Background="#666"/>
                    </Track.Thumb>
                    <!--滚动条向下-->
                    <Track.IncreaseRepeatButton>
                        <RepeatButton Style="{StaticResource ScrollBarPageButton}" Command="ScrollBar.PageDownCommand"/>
                    </Track.IncreaseRepeatButton>
                </Track>
                <!--下边按钮-->
                <RepeatButton Grid.Row="3" Style="{StaticResource ScrollBarLineButton}" Height="12" Command="ScrollBar.LineDownCommand" Content="M0 0H8L4 4Z"/>
            </Grid>
        </ControlTemplate>
        <!--水平滚动条样式-->
        <ControlTemplate x:Key="HorizontalScrollBar" TargetType="{x:Type ScrollBar}">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition MaxWidth="12"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition MaxWidth="12"/>
                </Grid.ColumnDefinitions>
                <!--背景-->
                <Border Grid.ColumnSpan="3" CornerRadius="2" Background="#CCC"/>
                <!--左边按钮-->
                <RepeatButton Grid.Column="0" Style="{StaticResource ScrollBarLineButton}" Width="12" Command="ScrollBar.LineLeftCommand" Content="M4 0V8L0 4Z"/>
                <!--滚动条-->
                <Track Name="PART_Track" Grid.Column="1" IsDirectionReversed="False">
                    <!--滚动条向左-->
                    <Track.DecreaseRepeatButton>
                        <RepeatButton Style="{StaticResource ScrollBarPageButton}" Command="ScrollBar.PageLeftCommand"/>
                    </Track.DecreaseRepeatButton>
                    <!--滚动条-->
                    <Track.Thumb>
                        <Thumb Style="{StaticResource ScrollBarThumb}" Background="#666"/>
                    </Track.Thumb>
                    <!--滚动条向右-->
                    <Track.IncreaseRepeatButton>
                        <RepeatButton Style="{StaticResource ScrollBarPageButton}" Command="ScrollBar.PageRightCommand"/>
                    </Track.IncreaseRepeatButton>
                </Track>
                <!--右边按钮-->
                <RepeatButton Grid.Column="3" Style="{StaticResource ScrollBarLineButton}" Width="12" Command="ScrollBar.LineRightCommand" Content="M0 0V8L4 4Z"/>
            </Grid>
        </ControlTemplate>
        <!--滚动条样式-->
        <Style x:Key="{x:Type ScrollBar}" TargetType="{x:Type ScrollBar}">
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <Setter Property="OverridesDefaultStyle" Value="True"/>
            <Style.Triggers>
                <Trigger Property="Orientation" Value="Horizontal">
                    <Setter Property="Width" Value="Auto"/>
                    <Setter Property="Height" Value="12"/>
                    <Setter Property="Template" Value="{StaticResource HorizontalScrollBar}" />
                </Trigger>
                <Trigger Property="Orientation" Value="Vertical">
                    <Setter Property="Width" Value="12"/>
                    <Setter Property="Height" Value="Auto"/>
                    <Setter Property="Template" Value="{StaticResource VerticalScrollBar}" />
                </Trigger>
            </Style.Triggers>
        </Style>
        <!--滚动面板样式-->
        <Style x:Key="scrollViewerStyle" TargetType="{x:Type ScrollViewer}">
            <Setter Property="OverridesDefaultStyle" Value="True"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ScrollViewer}">
                        <Grid>
                            <!--列定义-->
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <!--行定义-->
                            <Grid.RowDefinitions>
                                <RowDefinition/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>
                            <!--显示面板-->
                            <ScrollContentPresenter/>
                            <!--竖直和水平滚动条-->
                            <ScrollBar Name="PART_VerticalScrollBar" Value="{TemplateBinding VerticalOffset}" Maximum="{TemplateBinding ScrollableHeight}" ViewportSize="{TemplateBinding ViewportHeight}" Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" Grid.Row="0" Grid.Column="1"/>
                            <ScrollBar Name="PART_HorizontalScrollBar" Value="{TemplateBinding HorizontalOffset}" Maximum="{TemplateBinding ScrollableWidth}" ViewportSize="{TemplateBinding ViewportWidth}" Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}" Orientation="Horizontal" Grid.Row="1" Grid.Column="0"/>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Application.Resources>
</Application>
